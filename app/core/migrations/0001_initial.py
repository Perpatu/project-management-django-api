# Generated by Django 5.0.4 on 2024-05-05 08:09

import core.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('date_add', models.DateField(auto_now_add=True)),
                ('color', models.CharField(blank=True, default='#3788D8', max_length=30)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='core_client_name_76d9ae_idx')],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('order', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('date_add', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
                'indexes': [models.Index(fields=['name'], name='core_depart_name_80d4fe_idx')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Employee', 'Employee')], max_length=20)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=12)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('departments', models.ManyToManyField(blank=True, to='core.department')),
            ],
            options={
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='FileProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(upload_to=core.models.FileProduction.file_path)),
                ('date_add', models.DateField(default=django.utils.timezone.now)),
                ('new', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CommentFileProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.fileproduction')),
            ],
            options={
                'ordering': ['date_posted'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.fileproduction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('deadline', models.DateField()),
                ('progress', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('priority', models.CharField(choices=[('High', 'High'), ('Normal', 'Normal'), ('Low', 'Low')], max_length=20)),
                ('status', models.CharField(choices=[('In design', 'In Design'), ('Started', 'Started'), ('Completed', 'Completed'), ('Suspended', 'Suspended')], default='In design', max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=255)),
                ('order_number', models.CharField(blank=True, max_length=255)),
                ('secretariat', models.BooleanField(default=True)),
                ('invoiced', models.CharField(choices=[('YES', 'Yes'), ('YES (LACK OF INVOICE)', 'Lack Of Invoice'), ('NO', 'No')], default='NO', max_length=30)),
                ('date_add', models.DateField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.client')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='fileproduction',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='core.project'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(upload_to=core.models.Document.file_path)),
                ('date_add', models.DateField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='core.project')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_start_date', models.DateTimeField()),
                ('planned_end_date', models.DateTimeField()),
                ('real_start_date', models.DateTimeField(blank=True, null=True)),
                ('real_end_date', models.DateTimeField(blank=True, null=True)),
                ('paused_date', models.DateTimeField(blank=True, null=True)),
                ('test', models.BooleanField(default=False)),
                ('permission', models.BooleanField(default=False)),
                ('start', models.BooleanField(default=False)),
                ('paused', models.BooleanField(default=False)),
                ('end', models.BooleanField(default=False)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.fileproduction')),
                ('next_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next', to='core.task')),
                ('previous_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous', to='core.task')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
                ('users', models.ManyToManyField(blank=True, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['department__order'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_name'], name='core_user_last_na_cc993d_idx'),
        ),
        migrations.AddIndex(
            model_name='commentfileproduction',
            index=models.Index(fields=['date_posted'], name='core_commen_date_po_8795e8_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['number'], name='core_projec_number_e2d484_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['manager'], name='core_projec_manager_95ed2c_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['order_number'], name='core_projec_order_n_de7e30_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['name'], name='core_projec_name_0563a9_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['client'], name='core_projec_client__9c8c9d_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['deadline'], name='core_projec_deadlin_d84ad7_idx'),
        ),
        migrations.AddIndex(
            model_name='fileproduction',
            index=models.Index(fields=['name'], name='core_filepr_name_b4cb88_idx'),
        ),
        migrations.AddIndex(
            model_name='fileproduction',
            index=models.Index(fields=['file'], name='core_filepr_file_2d73a9_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['name'], name='core_docume_name_c35e16_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['file'], name='core_docume_file_3ae713_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['department'], name='core_task_departm_7a0197_idx'),
        ),
    ]
